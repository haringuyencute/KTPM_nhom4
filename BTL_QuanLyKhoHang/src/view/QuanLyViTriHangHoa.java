/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import controller.Mycontroller;
import java.awt.Color;
import java.util.Collections;
import java.util.Comparator;
import java.util.List;
import java.util.Random;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.ViTri;

/**
 *
 * @author NGUYEN MINH
 */
public class QuanLyViTriHangHoa extends javax.swing.JFrame {

    /**
     * Creates new form QuanLyViTriHangHoa
     */
    
    private static DefaultTableModel modelViTri;
    private static Mycontroller controller = new Mycontroller();
    private Object btnQuanLyViTri;
//    public int currentMa = 1;
//    public String mavt(){
//        String taoma;
//        if(currentMa < 10){
//            taoma = "VT00" + currentMa;
//        }
//        else if(currentMa < 100){
//            taoma = "VT0" + currentMa;
//        }
//        else{
//            taoma = "VT" + currentMa;
//        }
//        currentMa++;
//        return taoma;
//    }

    
    public QuanLyViTriHangHoa() {
        List<ViTri> list = controller.readDataFromFile("src/file/vitri.txt");
        initComponents();
        setLocationRelativeTo(null);
        modelViTri = (DefaultTableModel) tblViTri.getModel();
        this.showData(list, modelViTri);
    }

    QuanLyViTriHangHoa(TrangChu aThis, boolean b) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtMaKe = new javax.swing.JTextField();
        txtTenKe = new javax.swing.JTextField();
        txtTangSo = new javax.swing.JTextField();
        txtNganSo = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblViTri = new javax.swing.JTable();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnXem = new javax.swing.JButton();
        btnThoat = new javax.swing.JButton();
        btnTimKiem = new javax.swing.JButton();
        btnSapXep = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("QUẢN LÝ VỊ TRÍ HÀNG HÓA");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setText("Mã kệ: ");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel3.setText("Tên kệ:");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel4.setText("Số ngăn: ");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel5.setText("Số tầng: ");

        txtMaKe.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        txtTenKe.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        txtTangSo.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtTangSo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTangSoActionPerformed(evt);
            }
        });

        txtNganSo.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        tblViTri.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tblViTri.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Mã Kệ", "Tên Kệ", "Tầng Số", "Ngăn Số"
            }
        ));
        jScrollPane1.setViewportView(tblViTri);

        btnThem.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnThem.setText("Thêm");
        btnThem.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnSua.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnSua.setText("Sửa");
        btnSua.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnXoa.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnXoa.setText("Xóa");
        btnXoa.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnXem.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnXem.setText("Xem");
        btnXem.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnXem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXemActionPerformed(evt);
            }
        });

        btnThoat.setText("Thoát");
        btnThoat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThoatActionPerformed(evt);
            }
        });

        btnTimKiem.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnTimKiem.setText("Tìm kiếm");
        btnTimKiem.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemActionPerformed(evt);
            }
        });

        btnSapXep.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnSapXep.setText("Sắp xếp");
        btnSapXep.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnSapXep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSapXepActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(203, 203, 203)
                        .addComponent(btnThoat))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnXem, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38)
                        .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(45, 45, 45)
                        .addComponent(btnTimKiem)
                        .addGap(60, 60, 60)
                        .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(54, 54, 54)
                        .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(51, 51, 51)
                        .addComponent(btnSapXep)
                        .addGap(0, 24, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 660, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtTenKe, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtMaKe, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(17, 17, 17)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtTangSo, javax.swing.GroupLayout.DEFAULT_SIZE, 208, Short.MAX_VALUE)
                            .addComponent(txtNganSo))))
                .addContainerGap(66, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(btnThoat))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel5)
                    .addComponent(txtMaKe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTangSo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3)
                    .addComponent(txtTenKe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNganSo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSapXep)
                    .addComponent(btnXoa)
                    .addComponent(btnSua)
                    .addComponent(btnTimKiem)
                    .addComponent(btnThem)
                    .addComponent(btnXem))
                .addGap(21, 21, 21))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtTangSoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTangSoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTangSoActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
        try{
            new QLVT_Them().setVisible(true);
            this.dispose();         
        }
        catch(Exception e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnThemActionPerformed

    
    
    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        int selectedRow = tblViTri.getSelectedRow();
        try{
            if(selectedRow == -1){
                JOptionPane.showMessageDialog(this, "Hãy chọn vị trí muốn sửa thông tin", "Lỗi", JOptionPane.ERROR_MESSAGE);
            }
            else{
                DefaultTableModel model = (DefaultTableModel) tblViTri.getModel();
                String ma = (String) model.getValueAt(selectedRow, 0);
                String ten = (String) model.getValueAt(selectedRow, 1);
                String tang = (String) model.getValueAt(selectedRow, 2);
                String ngan = (String) model.getValueAt(selectedRow, 3);
                
                QLVT_Sua sua = new QLVT_Sua();
                List<ViTri> list = controller.readDataFromFile("src/file/vitri.txt");
                int index = -1;
                int tmp = 0;
                for(ViTri vt : list){
                    if(vt.getMake().equals(ma)){
                        index = tmp;
                    }
                    tmp++;
                }
                if(index != -1){
                    sua.displayDetails(selectedRow, ma, ten, tang, ngan);
                    sua.setVisible(true);
                    this.dispose();
                }
                else{
                    JOptionPane.showMessageDialog(this, "Không tồn tại dòng vừa chọn trong cơ sở dữ liệu", "Lỗi", JOptionPane.ERROR_MESSAGE);
                    throw new Exception("Loi dong chon");
                }
                
            }
        }
        catch (Exception ex) {
            ex.printStackTrace();
        }       
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        int indexdDelete = tblViTri.getSelectedRow();
        List<ViTri> list = controller.readDataFromFile("src/file/vitri.txt");
        try{
            if(list.size() == 0){
                JOptionPane.showMessageDialog(this, "Bảng trống");
            }
            else if(indexdDelete == -1){
                JOptionPane.showMessageDialog(this, "Chưa chọn máy cần xóa", "Lỗi", JOptionPane.ERROR_MESSAGE);
                throw new Exception("Loi chon dong");
            }
            else{
                int choice = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn xóa vị trí này?", "Message", JOptionPane.YES_NO_OPTION);
                if(choice != JOptionPane.YES_OPTION){
                    return;
                }
                else{
                    list.remove(indexdDelete);
                    showData(list, modelViTri);
                    controller.writeToFile(list, "src/file/vitri.txt");
                }
            }
        }
        catch(Exception e){
            e.printStackTrace();
        }
        
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnXemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXemActionPerformed
        int selectedRow = tblViTri.getSelectedRow();
        try{
            if(selectedRow == -1){
                JOptionPane.showMessageDialog(this, "Hãy chọn vị trí muốn sửa thông tin", "Lỗi", JOptionPane.ERROR_MESSAGE);
            }
            else{
                DefaultTableModel model = (DefaultTableModel) tblViTri.getModel();
                String ma = (String) model.getValueAt(selectedRow, 0);
                String ten = (String) model.getValueAt(selectedRow, 1);
                String tang = (String) model.getValueAt(selectedRow, 2);
                String ngan = (String) model.getValueAt(selectedRow, 3);
                
                txtMaKe.setText(ma);
                txtTenKe.setText(ten);
                txtTangSo.setText(tang);
                txtNganSo.setText(ngan);
                
            }
        }
        catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_btnXemActionPerformed

    private void btnThoatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThoatActionPerformed
        new TrangChu().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnThoatActionPerformed

    private void btnTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemActionPerformed
        try{
            String ma = txtMaKe.getText();
            List<ViTri> list = controller.readDataFromFile("src/file/vitri.txt");
            int find = -1;
            for(ViTri vt : list){
                if(ma.equals(vt.getMake())){ 
                    find = 1;
                    txtMaKe.setText(vt.getMake());
                    txtTenKe.setText(vt.getTenke());
                    txtTangSo.setText(vt.getTangso());
                    txtNganSo.setText(vt.getNganso());
                }
            }        
            if(find < 0){
                JOptionPane.showMessageDialog(this, "Không tìm thấy vị trí có mã trên", "Lỗi", JOptionPane.ERROR_MESSAGE);
            }
        }
        catch(Exception e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnTimKiemActionPerformed

    private void btnSapXepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSapXepActionPerformed
        try{
            List<ViTri> list = controller.readDataFromFile("src/file/vitri.txt");
            Collections.sort(list, new Comparator<ViTri>(){
                @Override
                public int compare(ViTri o1, ViTri o2) {
                    int tang1 = Integer.parseInt(o1.getTangso());
                    int tang2 = Integer.parseInt(o2.getTangso());
                    int ngan1 = Integer.parseInt(o1.getNganso());
                    int ngan2 = Integer.parseInt(o2.getNganso());
                    if(tang1 != tang2){
                        return Integer.compare(tang1, tang2);
                    }
                    else{
                        return Integer.compare(ngan1, ngan2);
                    }
                }  
            });
            controller.writeToFile(list, "src/file/vitri.txt");
            DefaultTableModel model = (DefaultTableModel) tblViTri.getModel();
            showData(list, model);
        }
        catch(Exception e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnSapXepActionPerformed
    
    private boolean checkMa(String ma) {
        List<ViTri> list = controller.readDataFromFile("src/file/vitri.txt");
        for(ViTri vt : list){
            if(ma.equals(vt.getMake())){
                return false;
            }
        }
        return true;
    }
    
    private void showData(List<ViTri> list, DefaultTableModel model){
        try{
            model.setRowCount(0);
            for(ViTri vt : list){
                model.addRow(new Object[]
                {
                    vt.getMake(),
                    vt.getTenke(),
                    vt.getTangso(),
                    vt.getNganso()
                });
            }
        }
        catch(Exception ex){
            System.out.println("Loi la : " + ex.getMessage());
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QuanLyViTriHangHoa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QuanLyViTriHangHoa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QuanLyViTriHangHoa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QuanLyViTriHangHoa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QuanLyViTriHangHoa().setVisible(true);
               
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSapXep;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnThoat;
    private javax.swing.JButton btnTimKiem;
    private javax.swing.JButton btnXem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private static javax.swing.JTable tblViTri;
    private javax.swing.JTextField txtMaKe;
    private javax.swing.JTextField txtNganSo;
    private javax.swing.JTextField txtTangSo;
    private javax.swing.JTextField txtTenKe;
    // End of variables declaration//GEN-END:variables


    
    

}
